{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/checkout/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useCart } from '@/lib/cart/CartContext';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport Image from 'next/image';\n\ninterface CryptoOption {\n  value: CurrencyType;\n  label: string;\n  icon: string;\n}\n\ntype CurrencyType = 'BTC' | 'LTC' | 'TRON' | 'MONERO' | 'ZCASH' | 'USDT';\n\nconst cryptoOptions: CryptoOption[] = [\n  { value: 'BTC', label: 'Bitcoin', icon: '/crypto-icons/bitcoin-btc-logo.svg' },\n  { value: 'LTC', label: 'Litecoin', icon: '/crypto-icons/litecoin-ltc-logo.svg' },\n  { value: 'TRON', label: 'Tron', icon: '/crypto-icons/tron-trx-logo.svg' },\n  { value: 'MONERO', label: 'Monero', icon: '/crypto-icons/monero-xmr-logo.svg' },\n  { value: 'ZCASH', label: 'Zcash', icon: '/crypto-icons/zcash-zec-logo.svg' },\n  { value: 'USDT', label: 'USDT', icon: '/crypto-icons/usd-coin-usdc-logo.svg' }\n];\n\nconst CheckoutPage = () => {\n  const { items, total, clearCart } = useCart();\n  const [email, setEmail] = useState('');\n  const [selectedCrypto, setSelectedCrypto] = useState<CryptoOption | null>(null);\n  const [paymentStatus, setPaymentStatus] = useState<'pending' | 'processing' | 'completed' | 'failed'>('pending');\n  const [qrData, setQrData] = useState('');\n  const [orderId, setOrderId] = useState<string | null>(null);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [downloadLink, setDownloadLink] = useState('');\n\n  const handlePayment = async () => {\n    if (!email || !selectedCrypto) return;\n\n    try {\n      setPaymentStatus('processing');\n      const response = await fetch('http://localhost:5000/payment/init', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          items,\n          email,\n          currency: selectedCrypto.value,\n          amount: total\n        })\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error);\n\n      setQrData(data.qrCode);\n      setOrderId(data.orderId);\n      setWalletAddress(data.walletAddress);\n      startPaymentCheck(data.orderId);\n    } catch (error) {\n      console.error('Payment initialization failed:', error);\n      setPaymentStatus('failed');\n    }\n  };\n\n  const startPaymentCheck = (orderId: string) => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/payment/status/${orderId}`);\n        const data = await response.json();\n        \n        if (data.status === 'completed') {\n          setPaymentStatus('completed');\n          setDownloadLink(data.downloadLink);\n          clearCart();\n          clearInterval(interval);\n        }\n      } catch (error) {\n        console.error('Payment status check failed:', error);\n      }\n    }, 5000);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"max-w-4xl mx-auto bg-white rounded-lg shadow-lg overflow-hidden\">\n        <div className=\"md:flex\">\n          {/* Left Panel - Cart Summary */}\n          <div className=\"md:w-1/2 p-8 bg-gray-50\">\n            <h2 className=\"text-2xl font-bold mb-6\">Order Summary</h2>\n            <div className=\"space-y-4\">\n              {items.map(item => (\n                <div key={`${item.id}-${item.format}`} className=\"flex justify-between items-center border-b pb-4\">\n                  <div>\n                    <h3 className=\"font-medium\">{item.title}</h3>\n                    <p className=\"text-sm text-gray-600\">Format: {item.format}</p>\n                  </div>\n                  <span className=\"font-semibold\">${item.price}</span>\n                </div>\n              ))}\n              <div className=\"flex justify-between items-center pt-4\">\n                <span className=\"text-xl font-bold\">Total</span>\n                <span className=\"text-xl font-bold\">${total}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Right Panel - Payment */}\n          <div className=\"md:w-1/2 p-8 border-l\">\n            <h2 className=\"text-2xl font-bold mb-6\">Payment Details</h2>\n            \n            {/* Email Input */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"your@email.com\"\n              />\n            </div>\n\n            {/* Crypto Selection */}\n            <div className=\"mb-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Select Payment Method\n              </label>\n              <div className=\"grid grid-cols-3 gap-4\">\n                {cryptoOptions.map(option => (\n                  <button\n                    key={option.value}\n                    onClick={() => setSelectedCrypto(option)}\n                    className={`p-4 border rounded-lg flex flex-col items-center ${\n                      selectedCrypto?.value === option.value\n                        ? 'border-blue-500 ring-2 ring-blue-500'\n                        : 'hover:border-gray-300'\n                    }`}\n                  >\n                    <Image\n                      src={option.icon}\n                      alt={option.label}\n                      width={32}\n                      height={32}\n                    />\n                    <span className=\"text-sm mt-2\">{option.label}</span>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Payment Status and QR Code */}\n            {qrData && (\n              <div className=\"text-center p-6 border rounded-lg bg-gray-50\">\n                <QRCodeCanvas\n                  value={qrData}\n                  size={200}\n                  level=\"H\"\n                  className=\"mx-auto mb-4\"\n                />\n                <div className=\"text-sm text-gray-600 break-all\">\n                  <p className=\"mb-2\">Wallet Address:</p>\n                  <p className=\"font-mono bg-white p-2 rounded\">{walletAddress}</p>\n                </div>\n                <div className=\"mt-4\">\n                  <p className=\"text-sm text-gray-600\">\n                    Status: {paymentStatus.charAt(0).toUpperCase() + paymentStatus.slice(1)}\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* Download Link */}\n            {downloadLink && (\n              <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                <p className=\"text-green-800 mb-2\">Payment Successful!</p>\n                <a\n                  href={downloadLink}\n                  className=\"text-blue-600 hover:text-blue-800 underline\"\n                  download\n                >\n                  Download your ebook\n                </a>\n              </div>\n            )}\n\n            {/* Pay Button */}\n            <button\n              onClick={handlePayment}\n              disabled={!email || !selectedCrypto || paymentStatus !== 'pending'}\n              className=\"w-full mt-6 bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n            >\n              {paymentStatus === 'pending' ? 'Pay Now' : 'Processing Payment...'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}