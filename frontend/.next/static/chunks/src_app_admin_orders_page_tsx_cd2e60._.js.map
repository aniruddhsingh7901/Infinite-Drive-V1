{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/admin/orders/page.tsx"],"sourcesContent":["\n// 'use client';\n\n// import { useState } from 'react';\n\n// interface Order {\n//   id: string;\n//   customerEmail: string;\n//   bookTitle: string;\n//   format: 'PDF' | 'EPUB';\n//   amount: number;\n//   paymentMethod: string;\n//   status: 'pending' | 'completed' | 'failed';\n//   date: string;\n// }\n\n// export default function OrdersManagement() {\n//   const [orders, setOrders] = useState<Order[]>([\n//     {\n//       id: 'ORD-001',\n//       customerEmail: 'customer@example.com',\n//       bookTitle: 'Infinite Drive',\n//       format: 'PDF',\n//       amount: 49.99,\n//       paymentMethod: 'BTC',\n//       status: 'completed',\n//       date: new Date().toISOString()\n//     }\n//   ]);\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <h1 className=\"text-2xl font-bold\">Orders</h1>\n\n//       <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"min-w-full divide-y divide-gray-200\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Order ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Customer\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Book\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Format\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Payment\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Date\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {orders.map((order) => (\n//                 <tr key={order.id}>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.customerEmail}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.bookTitle}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n//                       {order.format}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     ${order.amount}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.paymentMethod}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n//                       ${order.status === 'completed' ? 'bg-green-100 text-green-800' : \n//                         order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \n//                         'bg-red-100 text-red-800'}`}>\n//                       {order.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {new Date(order.date).toLocaleDateString()}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface Order {\n  id: string;\n  customerEmail: string;\n  bookId: any;\n  format: 'PDF' | 'EPUB';\n  amount: number;\n  paymentMethod: string;\n  status: 'pending' | 'completed' | 'failed';\n  date: any;\n}\n\nexport default function OrdersManagement() {\n  const [orders, setOrders] = useState<Order[]>([]);\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const token = localStorage.getItem('token');\n      try {\n     const response = await axios.get('http://localhost:5000/orders/all-orders', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log(\"ðŸš€ ~ fetchOrders ~ response:\", response)\n        setOrders(response.data);\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    };\n\n    fetchOrders();\n  }, []);\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Orders</h1>\n\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Order ID</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Customer</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">BookId</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Format</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Payment</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Status</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {orders.map((order) => (\n                <tr key={order.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.id}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.customerEmail}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.bookId}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.format}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.amount}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.paymentMethod}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{order.status}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{new Date(order.date).toLocaleString()}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}