{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/components/Button.tsx"],"sourcesContent":["'use client';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport default function Button({ \n  children, \n  className = '', \n  onClick,\n  type = 'button',\n  ...props \n}: ButtonProps) {\n  return (\n    <button\n      type={type}\n      className={`bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors ${className}`}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAQe,SAAS,OAAO,EAC7B,QAAQ,EACR,YAAY,EAAE,EACd,OAAO,EACP,OAAO,QAAQ,EACf,GAAG,OACS;IACZ,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAC,6EAA6E,EAAE,WAAW;QACtG,SAAS;QACR,GAAG,KAAK;kBAER;;;;;;AAGP"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/download/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Button from '@/components/Button';\n\nexport default function DownloadPage() {\n  const [downloading, setDownloading] = useState(false);\n  const [selectedFormat, setSelectedFormat] = useState<'PDF' | 'EPUB'>('PDF');\n\n  const handleDownload = async () => {\n    setDownloading(true);\n    try {\n      // This will be connected to backend later\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      // Simulate download\n      window.location.href = `/api/download?format=${selectedFormat}`;\n    } finally {\n      setDownloading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-8\">\n      <div className=\"bg-white rounded-lg shadow-lg p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-4\">Download Your Ebook</h1>\n          <p className=\"text-gray-600\">\n            Select your preferred format and download your ebook\n          </p>\n        </div>\n\n        <div className=\"space-y-8\">\n          {/* Format Selection */}\n          <div className=\"space-y-4\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Choose Format\n            </label>\n            <div className=\"grid grid-cols-2 gap-4\">\n              {['PDF', 'EPUB'].map((format) => (\n                <button\n                  key={format}\n                  onClick={() => setSelectedFormat(format as 'PDF' | 'EPUB')}\n                  className={`p-4 border-2 rounded-lg transition-all ${\n                    selectedFormat === format\n                      ? 'border-blue-500 bg-blue-50 text-blue-700'\n                      : 'border-gray-200 hover:border-blue-200'\n                  }`}\n                >\n                  <div className=\"font-medium\">{format}</div>\n                  <div className=\"text-sm text-gray-500\">Click to select</div>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Download Instructions */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"font-semibold mb-4\">Important Information:</h3>\n            <ul className=\"space-y-2 text-gray-600\">\n              <li className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-green-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                Link expires in 24 hours\n              </li>\n              <li className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-green-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                Maximum 3 download attempts\n              </li>\n              <li className=\"flex items-center\">\n                <svg className=\"w-5 h-5 text-green-500 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n                Available in both formats\n              </li>\n            </ul>\n          </div>\n\n          {/* Download Button */}\n          <Button\n            onClick={handleDownload}\n            disabled={downloading}\n            className=\"w-full py-4\"\n          >\n            {downloading ? (\n              <div className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Preparing Download...\n              </div>\n            ) : (\n              `Download ${selectedFormat}`\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IAErE,MAAM,iBAAiB;QACrB,eAAe;QACf,IAAI;YACF,0CAA0C;YAC1C,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;YACjD,oBAAoB;YACpB,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,qBAAqB,EAAE,gBAAgB;QACjE,SAAU;YACR,eAAe;QACjB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAK/B,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAA0C;;;;;;8CAG3D,8OAAC;oCAAI,WAAU;8CACZ;wCAAC;wCAAO;qCAAO,CAAC,GAAG,CAAC,CAAC,uBACpB,8OAAC;4CAEC,SAAS,IAAM,kBAAkB;4CACjC,WAAW,CAAC,uCAAuC,EACjD,mBAAmB,SACf,6CACA,yCACJ;;8DAEF,8OAAC;oDAAI,WAAU;8DAAe;;;;;;8DAC9B,8OAAC;oDAAI,WAAU;8DAAwB;;;;;;;2CATlC;;;;;;;;;;;;;;;;sCAgBb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAqB;;;;;;8CACnC,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA8B,MAAK;oDAAe,SAAQ;8DACvE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAAwI,UAAS;;;;;;;;;;;gDACxK;;;;;;;sDAGR,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA8B,MAAK;oDAAe,SAAQ;8DACvE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAAwI,UAAS;;;;;;;;;;;gDACxK;;;;;;;sDAGR,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA8B,MAAK;oDAAe,SAAQ;8DACvE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAAwI,UAAS;;;;;;;;;;;gDACxK;;;;;;;;;;;;;;;;;;;sCAOZ,8OAAC,4HAAA,CAAA,UAAM;4BACL,SAAS;4BACT,UAAU;4BACV,WAAU;sCAET,4BACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;wCAA6C,OAAM;wCAA6B,MAAK;wCAAO,SAAQ;;0DACjH,8OAAC;gDAAO,WAAU;gDAAa,IAAG;gDAAK,IAAG;gDAAK,GAAE;gDAAK,QAAO;gDAAe,aAAY;;;;;;0DACxF,8OAAC;gDAAK,WAAU;gDAAa,MAAK;gDAAe,GAAE;;;;;;;;;;;;oCAC/C;;;;;;uCAIR,CAAC,SAAS,EAAE,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAO1C"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}