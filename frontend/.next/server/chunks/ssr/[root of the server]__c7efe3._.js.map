{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/payments/process/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport QRCode from 'qr-code-styling';\n\ntype CryptoConfigKey = 'BTC' | 'LTC' | 'TRX' | 'SOL' | 'XMR' | 'DOGE' | 'USDT';\ntype CryptoConfig = {\n  name: string;\n  confirmations: number;\n  networkFee: string;\n  waitTime: string;\n  instructions: string;\n  explorerUrl: string;\n  qrPrefix: string;\n};\n\nconst CRYPTO_CONFIG: Record<CryptoConfigKey, CryptoConfig> = {\n  BTC: {\n    name: 'Bitcoin',\n    confirmations: 3,\n    networkFee: '~0.0001 BTC',\n    waitTime: '10-60 minutes',\n    instructions: 'Send exactly the specified amount to the Bitcoin address below',\n    explorerUrl: 'https://www.blockchain.com/btc/tx/',\n    qrPrefix: 'bitcoin'\n  },\n  LTC: {\n    name: 'Litecoin',\n    confirmations: 6,\n    networkFee: '~0.001 LTC',\n    waitTime: '2-30 minutes',\n    instructions: 'Send the exact LTC amount to the following address',\n    explorerUrl: 'https://blockchair.com/litecoin/transaction/',\n    qrPrefix: 'litecoin'\n  },\n  TRX: {\n    name: 'Tron',\n    confirmations: 1,\n    networkFee: '~1 TRX',\n    waitTime: '1-5 minutes',\n    instructions: 'Send TRX to the following address',\n    explorerUrl: 'https://tronscan.org/#/transaction/',\n    qrPrefix: 'tron'\n  },\n  SOL: {\n    name: 'Solana',\n    confirmations: 1,\n    networkFee: '~0.000005 SOL',\n    waitTime: '1-2 minutes',\n    instructions: 'Send SOL to the following Solana address',\n    explorerUrl: 'https://solscan.io/tx/',\n    qrPrefix: 'solana'\n  },\n  XMR: {\n    name: 'Monero',\n    confirmations: 10,\n    networkFee: '~0.0001 XMR',\n    waitTime: '5-20 minutes',\n    instructions: 'Send XMR to the following Monero address',\n    explorerUrl: 'https://www.exploremonero.com/transaction/',\n    qrPrefix: 'monero'\n  },\n  DOGE: {\n    name: 'Dogecoin',\n    confirmations: 6,\n    networkFee: '~1 DOGE',\n    waitTime: '1-10 minutes',\n    instructions: 'Send DOGE to the following address',\n    explorerUrl: 'https://dogechain.info/tx/',\n    qrPrefix: 'dogecoin'\n  },\n  USDT: {\n    name: 'Tether (TRC20)',\n    confirmations: 1,\n    networkFee: '~1 TRX',\n    waitTime: '1-5 minutes',\n    instructions: 'Send USDT (TRC20) to the following Tron address',\n    explorerUrl: 'https://tronscan.org/#/transaction/',\n    qrPrefix: 'tether'\n  }\n};\n  export default function PaymentProcessPage() {\n    const searchParams = useSearchParams();\n    const router = useRouter();\n    const [error, setError] = useState(false);\n    const [timeLeft, setTimeLeft] = useState(900); // 15 minutes\n  interface PaymentStatus {\n    success: boolean;\n    status: 'pending' | 'completed' | 'failed';\n    explorerUrl?: string;\n    txHash?: string;\n    downloadToken?: string;\n  }\n\n  const [paymentStatus, setPaymentStatus] = useState<PaymentStatus | null>(null);\n\n  const orderId = searchParams.get('orderId');\n  const address = searchParams.get('address');\n  const amount = searchParams.get('amount');\n  const currency = searchParams.get('currency') as CryptoConfigKey || 'BTC';\n  const cryptoInfo = CRYPTO_CONFIG[currency];\n\n  useEffect(() => {\n    let statusInterval: NodeJS.Timeout;\n    let timerInterval: NodeJS.Timeout;\n\n    const checkPaymentStatus = async () => {\n      try {\n        const response = await fetch(`/api/payments/status/${orderId}`);\n        const data = await response.json();\n\n        if (data.success) {\n          setPaymentStatus(data);\n          \n          if (data.status === 'completed') {\n            clearInterval(statusInterval);\n            clearInterval(timerInterval);\n            setTimeout(() => {\n              if (data.downloadToken) {\n                router.push(`/download?token=${data.downloadToken}`);\n              }\n            }, 3000);\n          }\n        }\n      } catch (error) {\n        console.error('Status check failed:', error);\n      }\n    };\n\n    try {\n      if (!orderId || !address || !amount || !currency || !cryptoInfo) {\n        setError(true);\n        return;\n      }\n\n      // Create QR code with simplified format\n      const qr = new QRCode({\n        width: 320,\n        height: 320,\n        data: address, // Simply use the address without any prefix\n        dotsOptions: {\n          color: '#2563eb',\n          type: 'rounded'\n        },\n        backgroundOptions: {\n          color: '#ffffff',\n        },\n        cornersSquareOptions: {\n          color: '#1e40af',\n          type: 'extra-rounded'\n        },\n        cornersDotOptions: {\n          color: '#1e40af',\n          type: 'dot'\n        },\n      });\n\n      const container = document.getElementById('qrcode');\n      if (container) {\n        container.innerHTML = '';\n        qr.append(container);\n      }\n\n      // Timer countdown\n      timerInterval = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 0) {\n            clearInterval(timerInterval);\n            setError(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      // Status checking\n      statusInterval = setInterval(checkPaymentStatus, 10000);\n      checkPaymentStatus();\n\n    } catch (err) {\n      console.error('Payment setup error:', err);\n      setError(true);\n    }\n\n    return () => {\n      if (statusInterval) clearInterval(statusInterval);\n      if (timerInterval) clearInterval(timerInterval);\n    };\n  }, [orderId, address, amount, currency, cryptoInfo, router]);\n\n  if (paymentStatus?.status === 'completed') {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\n        <div className=\"max-w-md w-full space-y-8 bg-white p-10 rounded-2xl shadow-xl text-center\">\n          <div className=\"mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-green-100 mb-8\">\n            <svg className=\"h-12 w-12 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n          <h2 className=\"text-3xl font-extrabold text-gray-900 mb-4\">Payment Successful!</h2>\n          <p className=\"text-gray-600 mb-8\">Your payment has been confirmed.</p>\n          \n          {paymentStatus.explorerUrl && (\n            <a\n              href={paymentStatus.explorerUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-600 hover:text-blue-800 underline block mb-6\"\n            >\n              View Transaction on Explorer\n            </a>\n          )}\n          \n          <p className=\"text-sm text-gray-500\">Redirecting to download page...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || timeLeft === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 px-4\">\n        <div className=\"max-w-md w-full space-y-8 bg-white p-10 rounded-2xl shadow-xl\">\n          <div className=\"text-center\">\n            <div className=\"mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-red-100 mb-8\">\n              <svg className=\"h-12 w-12 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </div>\n            <h2 className=\"text-3xl font-extrabold text-gray-900 mb-4\">Payment Failed</h2>\n            <p className=\"text-gray-600 mb-8\">We couldn't process your payment. Please try again.</p>\n            \n            <div className=\"bg-gray-50 rounded-xl p-6 mb-8\">\n              <h3 className=\"font-semibold text-gray-900 mb-4\">Possible Reasons:</h3>\n              <ul className=\"space-y-3 text-gray-600\">\n                <li className=\"flex items-center\">\n                  <svg className=\"h-5 w-5 text-red-500 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Payment timeout\n                </li>\n                <li className=\"flex items-center\">\n                  <svg className=\"h-5 w-5 text-red-500 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Insufficient funds\n                </li>\n                <li className=\"flex items-center\">\n                  <svg className=\"h-5 w-5 text-red-500 mr-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Network issues\n                </li>\n              </ul>\n            </div>\n            \n            <div className=\"flex justify-center space-x-4\">\n              <button\n                onClick={() => router.back()}\n                className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all\"\n              >\n                Try Again\n              </button>\n              <button\n                onClick={() => router.push('/')}\n                className=\"inline-flex items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all\"\n              >\n                Return Home\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const minutes = Math.floor(timeLeft / 60);\n  const seconds = timeLeft % 60;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full mx-auto space-y-8\">\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden\">\n          <div className=\"px-8 py-6 bg-gradient-to-r from-blue-600 to-blue-700\">\n            <h2 className=\"text-2xl font-bold text-white text-center\">\n              Complete Your {cryptoInfo?.name} Payment\n            </h2>\n          </div>\n\n          <div className=\"p-8\">\n            {/* Network Info */}\n            <div className=\"bg-blue-50 p-4 rounded-lg mb-6\">\n              <h3 className=\"font-medium text-blue-900 mb-2\">Payment Information</h3>\n              <ul className=\"space-y-2 text-sm text-blue-800\">\n                <li>• Required confirmations: {cryptoInfo?.confirmations}</li>\n                <li>• Estimated wait time: {cryptoInfo?.waitTime}</li>\n                <li>• Network fee: {cryptoInfo?.networkFee}</li>\n              </ul>\n            </div>\n\n            {/* QR Code */}\n            <div className=\"bg-gray-50 rounded-xl p-6 mb-6\">\n              <div id=\"qrcode\" className=\"flex justify-center\" />\n            </div>\n\n            {/* Timer */}\n            <div className=\"mb-6\">\n              <div className=\"flex items-center justify-center space-x-2 text-2xl font-bold text-gray-900\">\n                <svg className=\"h-6 w-6 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span>{minutes}:{seconds.toString().padStart(2, '0')}</span>\n              </div>\n            </div>\n\n            {/* Instructions */}\n            <div className=\"bg-gray-50 p-4 rounded-lg mb-6\">\n              <p className=\"text-gray-700\">{cryptoInfo?.instructions}</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Amount to Send</label>\n                <div className=\"text-2xl font-bold text-gray-900\">\n                  {amount} {currency}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">To Address</label>\n                <div className=\"bg-gray-50 rounded-lg p-4 break-all font-mono text-sm\">\n                  {address}\n                  <button\n                    onClick={() => navigator.clipboard.writeText(address || '')}\n                    className=\"mt-2 w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all\"\n                  >\n                    Copy Address\n                  </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n  \n          {/* Status indicator */}\n          <div className=\"bg-white rounded-lg shadow px-4 py-3\">\n            <div className=\"flex items-center\">\n              <div className={`rounded-full h-3 w-3 ${\n                paymentStatus?.status === 'pending' ? 'bg-yellow-400' : 'bg-gray-300'\n              } mr-2`} />\n              <span className=\"text-sm text-gray-600\">\n                {paymentStatus?.status === 'pending' \n                  ? 'Waiting for payment...' \n                  : 'Checking payment status...'}\n              </span>\n            </div>\n          </div>\n  \n          <div className=\"text-center text-sm text-gray-600\">\n            <p>Payment will be confirmed automatically once received</p>\n          </div>\n        </div>\n      </div>\n    );\n  }"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAJA;;;;;AAiBA,MAAM,gBAAuD;IAC3D,KAAK;QACH,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,KAAK;QACH,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,KAAK;QACH,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,KAAK;QACH,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,KAAK;QACH,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;IACA,MAAM;QACJ,MAAM;QACN,eAAe;QACf,YAAY;QACZ,UAAU;QACV,cAAc;QACd,aAAa;QACb,UAAU;IACZ;AACF;AACiB,SAAS;IACtB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,aAAa;IAS9D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IAEzE,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,MAAM,SAAS,aAAa,GAAG,CAAC;IAChC,MAAM,WAAW,aAAa,GAAG,CAAC,eAAkC;IACpE,MAAM,aAAa,aAAa,CAAC,SAAS;IAE1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;QACJ,IAAI;QAEJ,MAAM,qBAAqB;YACzB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,qBAAqB,EAAE,SAAS;gBAC9D,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,KAAK,OAAO,EAAE;oBAChB,iBAAiB;oBAEjB,IAAI,KAAK,MAAM,KAAK,aAAa;wBAC/B,cAAc;wBACd,cAAc;wBACd,WAAW;4BACT,IAAI,KAAK,aAAa,EAAE;gCACtB,OAAO,IAAI,CAAC,CAAC,gBAAgB,EAAE,KAAK,aAAa,EAAE;4BACrD;wBACF,GAAG;oBACL;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;YACxC;QACF;QAEA,IAAI;YACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY;gBAC/D,SAAS;gBACT;YACF;YAEA,wCAAwC;YACxC,MAAM,KAAK,IAAI,qKAAA,CAAA,UAAM,CAAC;gBACpB,OAAO;gBACP,QAAQ;gBACR,MAAM;gBACN,aAAa;oBACX,OAAO;oBACP,MAAM;gBACR;gBACA,mBAAmB;oBACjB,OAAO;gBACT;gBACA,sBAAsB;oBACpB,OAAO;oBACP,MAAM;gBACR;gBACA,mBAAmB;oBACjB,OAAO;oBACP,MAAM;gBACR;YACF;YAEA,MAAM,YAAY,SAAS,cAAc,CAAC;YAC1C,IAAI,WAAW;gBACb,UAAU,SAAS,GAAG;gBACtB,GAAG,MAAM,CAAC;YACZ;YAEA,kBAAkB;YAClB,gBAAgB,YAAY;gBAC1B,YAAY,CAAC;oBACX,IAAI,QAAQ,GAAG;wBACb,cAAc;wBACd,SAAS;wBACT,OAAO;oBACT;oBACA,OAAO,OAAO;gBAChB;YACF,GAAG;YAEH,kBAAkB;YAClB,iBAAiB,YAAY,oBAAoB;YACjD;QAEF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS;QACX;QAEA,OAAO;YACL,IAAI,gBAAgB,cAAc;YAClC,IAAI,eAAe,cAAc;QACnC;IACF,GAAG;QAAC;QAAS;QAAS;QAAQ;QAAU;QAAY;KAAO;IAE3D,IAAI,eAAe,WAAW,aAAa;QACzC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;4BAA2B,MAAK;4BAAO,QAAO;4BAAe,SAAQ;sCAClF,cAAA,8OAAC;gCAAK,eAAc;gCAAQ,gBAAe;gCAAQ,aAAY;gCAAI,GAAE;;;;;;;;;;;;;;;;kCAGzE,8OAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAC3D,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;oBAEjC,cAAc,WAAW,kBACxB,8OAAC;wBACC,MAAM,cAAc,WAAW;wBAC/B,QAAO;wBACP,KAAI;wBACJ,WAAU;kCACX;;;;;;kCAKH,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,IAAI,SAAS,aAAa,GAAG;QAC3B,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;gCAAyB,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CAChF,cAAA,8OAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;sCAGzE,8OAAC;4BAAG,WAAU;sCAA6C;;;;;;sCAC3D,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAElC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAG,WAAU;8CAAmC;;;;;;8CACjD,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA4B,MAAK;oDAAe,SAAQ;8DACrE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAA0N,UAAS;;;;;;;;;;;gDAC1P;;;;;;;sDAGR,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA4B,MAAK;oDAAe,SAAQ;8DACrE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAA0N,UAAS;;;;;;;;;;;gDAC1P;;;;;;;sDAGR,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;oDAAI,WAAU;oDAA4B,MAAK;oDAAe,SAAQ;8DACrE,cAAA,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAA0N,UAAS;;;;;;;;;;;gDAC1P;;;;;;;;;;;;;;;;;;;sCAMZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS,IAAM,OAAO,IAAI;oCAC1B,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS,IAAM,OAAO,IAAI,CAAC;oCAC3B,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQb;IAEA,MAAM,UAAU,KAAK,KAAK,CAAC,WAAW;IACtC,MAAM,UAAU,WAAW;IAE3B,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAG,WAAU;;oCAA4C;oCACzC,YAAY;oCAAK;;;;;;;;;;;;sCAIpC,8OAAC;4BAAI,WAAU;;8CAEb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAiC;;;;;;sDAC/C,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC;;wDAAG;wDAA2B,YAAY;;;;;;;8DAC3C,8OAAC;;wDAAG;wDAAwB,YAAY;;;;;;;8DACxC,8OAAC;;wDAAG;wDAAgB,YAAY;;;;;;;;;;;;;;;;;;;8CAKpC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,IAAG;wCAAS,WAAU;;;;;;;;;;;8CAI7B,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;gDAAwB,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DAC/E,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAY;oDAAI,GAAE;;;;;;;;;;;0DAEvE,8OAAC;;oDAAM;oDAAQ;oDAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG;;;;;;;;;;;;;;;;;;8CAKpD,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;kDAAiB,YAAY;;;;;;;;;;;8CAG5C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAChE,8OAAC;oDAAI,WAAU;;wDACZ;wDAAO;wDAAE;;;;;;;;;;;;;sDAId,8OAAC;;8DACC,8OAAC;oDAAM,WAAU;8DAA+C;;;;;;8DAChE,8OAAC;oDAAI,WAAU;;wDACZ;sEACD,8OAAC;4DACC,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC,WAAW;4DACxD,WAAU;sEACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAUT,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAW,CAAC,qBAAqB,EACpC,eAAe,WAAW,YAAY,kBAAkB,cACzD,KAAK,CAAC;;;;;;0CACP,8OAAC;gCAAK,WAAU;0CACb,eAAe,WAAW,YACvB,2BACA;;;;;;;;;;;;;;;;;8BAKV,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAKb"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}