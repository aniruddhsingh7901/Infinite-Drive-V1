{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/admin/login/page.tsx"],"sourcesContent":["// 'use client';\n\n// import { useState } from 'react';\n// import { useRouter } from 'next/navigation';\n// import axios from 'axios';\n// import Button from '@/components/Button';\n\n// export default function AdminLogin() {\n//   const router = useRouter();\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/auth/login', { email, password });\n//       console.log(\"ðŸš€ ~ handleSubmit ~ response:\", response)\n\n//       if (response.status === 200) {\n//         localStorage.setItem('token', response.data.token);\n//         router.push('/admin');\n//       } else {\n//         setError(response.data.message || 'Login failed');\n//       }\n//     } catch (error) {\n//       setError(error instanceof Error ? error.message : 'An error occurred. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h1 className=\"text-2xl font-bold mb-6\">Admin Login</h1>\n//         {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <div>\n//             <label className=\"block mb-1\">Email</label>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               className=\"w-full p-2 border rounded\"\n//               required\n//             />\n//           </div>\n//           <div>\n//             <label className=\"block mb-1\">Password</label>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               className=\"w-full p-2 border rounded\"\n//               required\n//             />\n//           </div>\n//           <div className=\"flex justify-end\">\n//             <Button type=\"submit\" disabled={loading}>\n//               {loading ? 'Logging in...' : 'Login'}\n//             </Button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// 'use client';\n\n// import { useState, useEffect } from 'react';\n// import { useRouter } from 'next/navigation';\n// import Link from 'next/link';\n// import axios from 'axios';\n\n// const menuItems = [\n//   { href: '/admin', label: 'Dashboard', icon: 'dashboard' },\n//   { href: '/admin/books', label: 'Books', icon: 'book' },\n//   { href: '/admin/orders', label: 'Orders', icon: 'shopping-cart' },\n//   { href: '/admin/settings', label: 'Settings', icon: 'cog' }\n// ];\n\n// export default function AdminLayout({\n//   children,\n// }: {\n//   children: React.ReactNode;\n// }) {\n//   const router = useRouter();\n//   const [isSidebarOpen, setSidebarOpen] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       router.push('/admin/login');\n//       return;\n//     }\n\n//     const checkAuth = async () => {\n//       try {\n//         const response = await axios.get('/api/admin/check-auth', {\n//           headers: { Authorization: `Bearer ${token}` }\n//         });\n//         if (response.data.isAuthenticated) {\n//           setIsAuthenticated(true);\n//         } else {\n//           setErrorMessage('Access denied. You are not an admin.');\n//           router.push('/admin/login');\n//         }\n//       } catch (error) {\n//         setErrorMessage('Access denied. You are not an admin.');\n//         router.push('/admin/login');\n//       }\n//     };\n\n//     checkAuth();\n//   }, [router]);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     router.push('/admin/login');\n//   };\n\n//   if (!isAuthenticated) {\n//     return <div>{errorMessage}</div>;\n//   }\n\n//   return (\n//     <div className=\"flex h-screen bg-gray-100\">\n//       <aside className={`bg-white w-64 shadow-md ${isSidebarOpen ? 'block' : 'hidden'} md:block`}>\n//         <div className=\"p-4\">\n//           <h2 className=\"text-2xl font-bold\">Admin Panel</h2>\n//         </div>\n//         <nav className=\"mt-5\">\n//           {menuItems.map((item) => (\n//             <Link key={item.href} href={item.href}>\n//               <a className=\"block px-4 py-2 mt-2 text-sm font-semibold text-gray-900 bg-gray-200 rounded-lg hover:bg-gray-300\">\n//                 {item.label}\n//               </a>\n//             </Link>\n//           ))}\n//         </nav>\n//         <div className=\"p-4\">\n//           <button\n//             onClick={handleLogout}\n//             className=\"w-full px-4 py-2 mt-2 text-sm font-semibold text-white bg-red-500 rounded-lg hover:bg-red-600\"\n//           >\n//             Logout\n//           </button>\n//         </div>\n//       </aside>\n//       <div className=\"flex-1 flex flex-col overflow-hidden\">\n//         <header className=\"flex items-center justify-between p-4 bg-white shadow-md\">\n//           <button\n//             onClick={() => setSidebarOpen(!isSidebarOpen)}\n//             className=\"text-gray-500 focus:outline-none md:hidden\"\n//           >\n//             <svg\n//               className=\"w-6 h-6\"\n//               fill=\"none\"\n//               stroke=\"currentColor\"\n//               viewBox=\"0 0 24 24\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//             >\n//               <path\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//                 strokeWidth=\"2\"\n//                 d=\"M4 6h16M4 12h16m-7 6h7\"\n//               ></path>\n//             </svg>\n//           </button>\n//           <h1 className=\"text-xl font-bold\">Admin Panel</h1>\n//         </header>\n//         <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\">\n//           <div className=\"container mx-auto px-6 py-8\">\n//             {children}\n//           </div>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport axios from 'axios';\n\nexport default function AdminLogin() {\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost:5000/auth/login', { email, password });\n      console.log(\"ðŸš€ ~ handleLogin ~ response:\", response);\n      localStorage.setItem('token', response.data.token);\n      router.push('/admin');\n    } catch (error) {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n        <h1 className=\"text-2xl font-bold mb-6\">Admin Login</h1>\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n        <form onSubmit={handleLogin}>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700\">Email</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded mt-1\"\n              required\n            />\n          </div>\n          <div className=\"mb-6\">\n            <label className=\"block text-gray-700\">Password</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded mt-1\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}