{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/admin/login/page.tsx"],"sourcesContent":["\n// 'use client';\n\n// import { useState } from 'react';\n// import { useRouter } from 'next/navigation';\n// import axios from 'axios';\n// import Button from '@/components/Button';\n\n// export default function AdminLogin() {\n//   const router = useRouter();\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n\n//     try {\n//       const response = await axios.post('http://localhost:5000/auth/login', { email, password });\n//       console.log(\"ðŸš€ ~ handleSubmit ~ response:\", response)\n\n//       if (response.status === 200) {\n//         localStorage.setItem('token', response.data.token);\n//         router.push('/admin');\n//       } else {\n//         setError(response.data.message || 'Login failed');\n//       }\n//     } catch (error) {\n//       setError(error instanceof Error ? error.message : 'An error occurred. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n//       <div className=\"max-w-md w-full bg-white p-6 rounded-lg shadow-md\">\n//         <h1 className=\"text-2xl font-bold mb-6\">Admin Login</h1>\n//         {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n//         <form onSubmit={handleSubmit} className=\"space-y-4\">\n//           <div>\n//             <label className=\"block mb-1\">Email</label>\n//             <input\n//               type=\"email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               className=\"w-full p-2 border rounded\"\n//               required\n//             />\n//           </div>\n//           <div>\n//             <label className=\"block mb-1\">Password</label>\n//             <input\n//               type=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               className=\"w-full p-2 border rounded\"\n//               required\n//             />\n//           </div>\n//           <div className=\"flex justify-end\">\n//             <Button type=\"submit\" disabled={loading}>\n//               {loading ? 'Logging in...' : 'Login'}\n//             </Button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport ProtectedRoute from '../../components/ProtectedRoute';\nimport { useAuth } from '../../context/AuthContext';\n\nconst menuItems = [\n  { href: '/admin', label: 'Dashboard', icon: 'dashboard' },\n  { href: '/admin/books', label: 'Books', icon: 'book' },\n  { href: '/admin/orders', label: 'Orders', icon: 'shopping-cart' },\n  { href: '/admin/settings', label: 'Settings', icon: 'cog' }\n];\n\nexport default function AdminLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const router = useRouter();\n  const [isSidebarOpen, setSidebarOpen] = useState(true);\n  const { logout } = useAuth();\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <ProtectedRoute>\n      <div className=\"flex h-screen bg-gray-100\">\n        <aside className={`bg-white w-64 shadow-md ${isSidebarOpen ? 'block' : 'hidden'} md:block`}>\n          <div className=\"p-4\">\n            <h2 className=\"text-2xl font-bold\">Admin Panel</h2>\n          </div>\n          <nav className=\"mt-5\">\n            {menuItems.map((item) => (\n              <Link key={item.href} href={item.href}>\n                <a className=\"block px-4 py-2 mt-2 text-sm font-semibold text-gray-900 bg-gray-200 rounded-lg hover:bg-gray-300\">\n                  {item.label}\n                </a>\n              </Link>\n            ))}\n          </nav>\n          <div className=\"p-4\">\n            <button\n              onClick={handleLogout}\n              className=\"w-full px-4 py-2 mt-2 text-sm font-semibold text-white bg-red-500 rounded-lg hover:bg-red-600\"\n            >\n              Logout\n            </button>\n          </div>\n        </aside>\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\n          <header className=\"flex items-center justify-between p-4 bg-white shadow-md\">\n            <button\n              onClick={() => setSidebarOpen(!isSidebarOpen)}\n              className=\"text-gray-500 focus:outline-none md:hidden\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M4 6h16M4 12h16m-7 6h7\"\n                ></path>\n              </svg>\n            </button>\n            <h1 className=\"text-xl font-bold\">Admin Panel</h1>\n          </header>\n          <main className=\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-100\">\n            <div className=\"container mx-auto px-6 py-8\">\n              {children}\n            </div>\n          </main>\n        </div>\n      </div>\n    </ProtectedRoute>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}