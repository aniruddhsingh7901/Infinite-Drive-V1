{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/admin/books/add/page.tsx"],"sourcesContent":["// 'use client';\n\n// import { useState } from 'react';\n// import { useRouter } from 'next/navigation';\n// import Button from '@/components/Button';\n\n// export default function AddBook() {\n//   const router = useRouter();\n//   const [bookData, setBookData] = useState({\n//     title: '',\n//     description: '',\n//     price: '',\n//     file: null as File | null\n//   });\n\n//   const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     // This would upload the book file and create the book entry\n//     console.log('Creating book:', bookData);\n//     router.push('/admin/books');\n//   };\n\n//   return (\n//     <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow\">\n//       <h1 className=\"text-2xl font-bold mb-6\">Add New Book</h1>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <div>\n//           <label className=\"block mb-1\">Title</label>\n//           <input\n//             type=\"text\"\n//             value={bookData.title}\n//             onChange={(e) => setBookData({...bookData, title: e.target.value})}\n//             className=\"w-full p-2 border rounded\"\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Description</label>\n//           <textarea\n//             value={bookData.description}\n//             onChange={(e) => setBookData({...bookData, description: e.target.value})}\n//             className=\"w-full p-2 border rounded\"\n//             rows={4}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Price</label>\n//           <input\n//             type=\"number\"\n//             value={bookData.price}\n//             onChange={(e) => setBookData({...bookData, price: e.target.value})}\n//             className=\"w-full p-2 border rounded\"\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label className=\"block mb-1\">Book File</label>\n//           <input\n//             type=\"file\"\n//             onChange={(e) => setBookData({...bookData, file: e.target.files?.[0] || null})}\n//             className=\"w-full p-2 border rounded\"\n//             accept=\".pdf,.epub\"\n//             required\n//           />\n//         </div>\n//         <div className=\"flex justify-end space-x-4\">\n//           <Button onClick={() => router.back()} className=\"bg-gray-500\">\n//             Cancel\n//           </Button>\n//           <Button type=\"submit\">\n//             Add Book\n//           </Button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n// 'use client';\n\n// import { useState } from 'react';\n// import { useRouter } from 'next/navigation';\n// import axios from 'axios';\n// import Button from '@/components/Button';\n\n// interface BookForm {\n//   title: string;\n//   description: string;\n//   price: string;\n//   formats: ('PDF' | 'EPUB')[];\n//   coverImage: File | null;\n//   bookFiles: {\n//     PDF?: File;\n//     EPUB?: File;\n//   };\n// }\n\n// export default function AddBook() {\n//   const router = useRouter();\n//   const [loading, setLoading] = useState(false);\n//   const [formData, setFormData] = useState<BookForm>({\n//     title: '',\n//     description: '',\n//     price: '',\n//     formats: ['PDF'],\n//     coverImage: null,\n//     bookFiles: {}\n//   });\n// const handleSubmit = async (e: React.FormEvent) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const data = new FormData();\n      \n//       // Basic info\n//       data.append('title', formData.title);\n//       data.append('description', formData.description);\n//       data.append('price', formData.price);\n//       data.append('formats', formData.formats.join(','));\n\n//       // Cover image\n//       if (formData.coverImage) {\n//         data.append('coverImage', formData.coverImage);\n//       }\n\n//       // Book files with format-specific fields\n//       if (formData.bookFiles.PDF) {\n//         data.append('pdfFile', formData.bookFiles.PDF);\n//       }\n      \n//       if (formData.bookFiles.EPUB) {\n//         data.append('epubFile', formData.bookFiles.EPUB);\n//       }\n\n//       // Validate required files\n//       const missingFiles = formData.formats.filter(format => !formData.bookFiles[format]);\n//       if (missingFiles.length > 0) {\n//         throw new Error(`Missing files for formats: ${missingFiles.join(', ')}`);\n//       }\n\n//       const response = await axios.post('http://localhost:5000/books/add', data, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//         onUploadProgress: (progressEvent) => {\n//           const percentCompleted = progressEvent.total ? Math.round((progressEvent.loaded * 100) / progressEvent.total) : 0;\n//           console.log('Upload Progress:', percentCompleted);\n//         },\n//       });\n\n//       console.log('Book added successfully:', response.data);\n//       router.push('/admin/books');\n      \n//     } catch (error) {\n//       console.error('Error adding book:', error);\n//       // Handle specific error cases\n//       if (axios.isAxiosError(error)) {\n//         if (error.response?.status === 413) {\n//           alert('File size too large');\n//         } else {\n//           alert(error.response?.data?.message || 'Error uploading book');\n//         }\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n// };\n\n//   return (\n//     <div className=\"max-w-3xl mx-auto\">\n//       <div className=\"bg-white rounded-lg shadow p-6\">\n//         <h1 className=\"text-2xl font-bold mb-6\">Add New Book</h1>\n        \n//         <form onSubmit={handleSubmit} className=\"space-y-6\">\n//           {/* Basic Info */}\n//           <div className=\"space-y-4\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Title\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\"\n//                 value={formData.title}\n//                 onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n//               />\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Description\n//               </label>\n//               <textarea\n//                 required\n//                 rows={4}\n//                 className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\"\n//                 value={formData.description}\n//                 onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n//               />\n//             </div>\n\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Price ($)\n//               </label>\n//               <input\n//                 type=\"number\"\n//                 step=\"0.01\"\n//                 required\n//                 className=\"w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500\"\n//                 value={formData.price}\n//                 onChange={(e) => setFormData({ ...formData, price: e.target.value })}\n//               />\n//             </div>\n//           </div>\n\n//           {/* Format Selection */}\n//           <div>\n//             <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n//               Available Formats\n//             </label>\n//             <div className=\"flex gap-4\">\n//               {['PDF', 'EPUB'].map((format) => (\n//                 <label key={format} className=\"flex items-center\">\n//                   <input\n//                     type=\"checkbox\"\n//                     checked={formData.formats.includes(format as 'PDF' | 'EPUB')}\n//                     onChange={(e) => {\n//                       const newFormats = e.target.checked\n//                         ? [...formData.formats, format as 'PDF' | 'EPUB']\n//                         : formData.formats.filter(f => f !== format);\n//                       setFormData({ ...formData, formats: newFormats });\n//                     }}\n//                     className=\"mr-2\"\n//                   />\n//                   {format}\n//                 </label>\n//               ))}\n//             </div>\n//           </div>\n\n//           {/* File Uploads */}\n//           <div className=\"space-y-4\">\n//             <div>\n//               <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                 Cover Image\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 onChange={(e) => setFormData({\n//                   ...formData,\n//                   coverImage: e.target.files?.[0] || null\n//                 })}\n//                 className=\"w-full\"\n//               />\n//             </div>\n\n//             {formData.formats.map((format) => (\n//               <div key={format}>\n//                 <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//                   {format} File\n//                 </label>\n//                 <input\n//                   type=\"file\"\n//                   accept={format === 'PDF' ? '.pdf' : '.epub'}\n//                   onChange={(e) => setFormData({\n//                     ...formData,\n//                     bookFiles: {\n//                       ...formData.bookFiles,\n//                       [format]: e.target.files?.[0]\n//                     }\n//                   })}\n//                   className=\"w-full\"\n//                 />\n//               </div>\n//             ))}\n//           </div>\n\n//           {/* Submit Buttons */}\n//           <div className=\"flex justify-end space-x-4 pt-4\">\n//             <Button\n//               type=\"button\"\n//               className=\"bg-gray-500 hover:bg-gray-600\"\n//               onClick={() => router.back()}\n//             >\n//               Cancel\n//             </Button>\n//             <Button\n//               type=\"submit\"\n//               disabled={loading}\n//               className={loading ? 'opacity-50 cursor-not-allowed' : ''}\n//             >\n//               {loading ? 'Adding Book...' : 'Add Book'}\n//             </Button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;gCACV,IAAA;4BAAA;4BAAA,+BAA2C;wCAC3CC,IAAAA;oCAAAA,OAAY;oCAAA;yCACZC,UAAU;8CACVC,IAAAA,CAAAA,GAAU;wCAAA,CAAE,OAAA;4CAAA,IAAA;4CAAA;yCAAA;;mCACd;;6BACAC,UAAU;sCACRC,IAAAA,CAAAA;4BAAAA;yBAAAA,CAAYnB;;qBACd;wBACF,CAAE,SAAA,CAAA;oBAAA;iBAAA","ignoreList":[0]}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}