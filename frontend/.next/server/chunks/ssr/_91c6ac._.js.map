{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/src/app/admin/orders/page.tsx"],"sourcesContent":["\n// 'use client';\n\n// import { useState } from 'react';\n\n// interface Order {\n//   id: string;\n//   customerEmail: string;\n//   bookTitle: string;\n//   format: 'PDF' | 'EPUB';\n//   amount: number;\n//   paymentMethod: string;\n//   status: 'pending' | 'completed' | 'failed';\n//   date: string;\n// }\n\n// export default function OrdersManagement() {\n//   const [orders, setOrders] = useState<Order[]>([\n//     {\n//       id: 'ORD-001',\n//       customerEmail: 'customer@example.com',\n//       bookTitle: 'Infinite Drive',\n//       format: 'PDF',\n//       amount: 49.99,\n//       paymentMethod: 'BTC',\n//       status: 'completed',\n//       date: new Date().toISOString()\n//     }\n//   ]);\n\n//   return (\n//     <div className=\"space-y-6\">\n//       <h1 className=\"text-2xl font-bold\">Orders</h1>\n\n//       <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"min-w-full divide-y divide-gray-200\">\n//             <thead className=\"bg-gray-50\">\n//               <tr>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Order ID\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Customer\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Book\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Format\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Amount\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Payment\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Status\n//                 </th>\n//                 <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\n//                   Date\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody className=\"bg-white divide-y divide-gray-200\">\n//               {orders.map((order) => (\n//                 <tr key={order.id}>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.id}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.customerEmail}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.bookTitle}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n//                       {order.format}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     ${order.amount}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {order.paymentMethod}\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap\">\n//                     <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n//                       ${order.status === 'completed' ? 'bg-green-100 text-green-800' : \n//                         order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : \n//                         'bg-red-100 text-red-800'}`}>\n//                       {order.status}\n//                     </span>\n//                   </td>\n//                   <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n//                     {new Date(order.date).toLocaleDateString()}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }"],"names":[],"mappings":"AACA,gBAAgB;AAEhB,oCAAoC;AAEpC,oBAAoB;AACpB,gBAAgB;AAChB,2BAA2B;AAC3B,uBAAuB;AACvB,4BAA4B;AAC5B,oBAAoB;AACpB,2BAA2B;AAC3B,gDAAgD;AAChD,kBAAkB;AAClB,IAAI;AAEJ,+CAA+C;AAC/C,oDAAoD;AACpD,QAAQ;AACR,uBAAuB;AACvB,+CAA+C;AAC/C,qCAAqC;AACrC,uBAAuB;AACvB,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,uCAAuC;AACvC,QAAQ;AACR,QAAQ;AAER,aAAa;AACb,kCAAkC;AAClC,uDAAuD;AAEvD,qEAAqE;AACrE,4CAA4C;AAC5C,oEAAoE;AACpE,6CAA6C;AAC7C,qBAAqB;AACrB,mGAAmG;AACnG,6BAA6B;AAC7B,wBAAwB;AACxB,mGAAmG;AACnG,6BAA6B;AAC7B,wBAAwB;AACxB,mGAAmG;AACnG,yBAAyB;AACzB,wBAAwB;AACxB,mGAAmG;AACnG,2BAA2B;AAC3B,wBAAwB;AACxB,mGAAmG;AACnG,2BAA2B;AAC3B,wBAAwB;AACxB,mGAAmG;AACnG,4BAA4B;AAC5B,wBAAwB;AACxB,mGAAmG;AACnG,2BAA2B;AAC3B,wBAAwB;AACxB,mGAAmG;AACnG,yBAAyB;AACzB,wBAAwB;AACxB,sBAAsB;AACtB,uBAAuB;AACvB,oEAAoE;AACpE,yCAAyC;AACzC,sCAAsC;AACtC,yEAAyE;AACzE,iCAAiC;AACjC,0BAA0B;AAC1B,yEAAyE;AACzE,4CAA4C;AAC5C,0BAA0B;AAC1B,yEAAyE;AACzE,wCAAwC;AACxC,0BAA0B;AAC1B,iEAAiE;AACjE,iIAAiI;AACjI,uCAAuC;AACvC,8BAA8B;AAC9B,0BAA0B;AAC1B,yEAAyE;AACzE,sCAAsC;AACtC,0BAA0B;AAC1B,yEAAyE;AACzE,4CAA4C;AAC5C,0BAA0B;AAC1B,iEAAiE;AACjE,sGAAsG;AACtG,0FAA0F;AAC1F,0FAA0F;AAC1F,wDAAwD;AACxD,uCAAuC;AACvC,8BAA8B;AAC9B,0BAA0B;AAC1B,yEAAyE;AACzE,kEAAkE;AAClE,0BAA0B;AAC1B,wBAAwB;AACxB,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;AACrB,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,OAAO;AACP,IAAI"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/im/infinite-drive/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA6BA,OAAO,MAAMM,eAAe;AAH5B,8BAA8B;AAzB9B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;IAapBM,WAAWC;AAKb,4DAA4D;;;;;;;;;;;AAC5D,OAAO,MAAMC,cAAc,IAAIX,mBAAmB,uBAAA;IAChDY,MAAAA,MAAY;QACVC,KAAAA;IAAMZ;IAAAA,MAAUa,QAAQ;gBACxBC,IAAAA;YAAAA,CAAM;YAAA;wBACNC,IAAAA;oBAAAA,KAAU;oBAAA;gCACV,IAAA;4BAAA;4BAAA,0BAA2C;iCAC3CC,YAAY;sCACZC,IAAAA,CAAAA,GAAU;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACVC,UAAU,EAAE;;qBACd;0BACAC,QAAAA,CAAU,CAAA;oBAAA;iBAAA;;iBACRC,YAAYnB;kBACd,QAAA,CAAA;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;YACF;SAAA,CAAE","ignoreList":[0]}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}